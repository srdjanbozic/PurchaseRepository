// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Purchase_Microservice.Infrastructure.Persistence;

#nullable disable

namespace Purchase_Microservice.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217222007_UpdateMigration")]
    partial class UpdateMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Purchase_Microservice.Domain.Entities.Purchase", b =>
                {
                    b.Property<Guid>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PurchaseId");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseId");

                    b.ToTable("purchases");
                });

            modelBuilder.Entity("Purchase_Microservice.Domain.Entities.Purchase", b =>
                {
                    b.OwnsOne("Purchase_Microservice.Domain.Entities.Buyer", "Buyer", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("BuyerEmail")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BuyerEmail");

                            b1.Property<Guid>("BuyerId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BuyerId");

                            b1.Property<string>("BuyerUsername")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("BuyerUsername");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("purchases");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseId");
                        });

                    b.OwnsOne("Purchase_Microservice.Domain.Entities.Delivery", "Delivery", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("DeliveryId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DeliveryId");

                            b1.Property<decimal>("DeliveryPrice")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("DeliveryPrice");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("purchases");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseId");
                        });

                    b.OwnsOne("Purchase_Microservice.Domain.Entities.Post", "Post", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("PostDate");

                            b1.Property<string>("OwnerEmail")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("OwnerEmail");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("OwnerId");

                            b1.Property<string>("OwnerName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("OwnerName");

                            b1.Property<int?>("OwnerPhone")
                                .HasColumnType("int")
                                .HasColumnName("OwnerPhone");

                            b1.Property<Guid>("PostId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PostId");

                            b1.Property<string>("PostTitle")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<decimal>("Price")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PostPrice");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("purchases");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseId");
                        });

                    b.Navigation("Buyer")
                        .IsRequired();

                    b.Navigation("Delivery")
                        .IsRequired();

                    b.Navigation("Post")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
